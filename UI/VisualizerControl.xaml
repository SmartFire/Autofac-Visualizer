<UserControl x:Class="Graves.Visualizers.Autofac.UI.VisualizerControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:UI="clr-namespace:Graves.Visualizers.Autofac.UI"
             xmlns:Structures="clr-namespace:Graves.Visualizers.Autofac.Data.Structures"
             Height="600"
             Width="400"
             FontFamily="Calibri"
             FontSize="14"
             x:Name="root">

    <UserControl.DataContext>
        <ObjectDataProvider ObjectType="{x:Type UI:DesignTimeVisualizerViewModel}" />
    </UserControl.DataContext>

    <UserControl.Background>
        <LinearGradientBrush StartPoint="0,0"
                             EndPoint="0,1">
            <GradientStop Offset="0"
                          Color="#FFFFFF" />
            <GradientStop Offset="1"
                          Color="#99A5BA" />
        </LinearGradientBrush>
    </UserControl.Background>
    <UserControl.Resources>

        <UI:TypeDisplayConverter x:Key="typeConverter" />
        <BooleanToVisibilityConverter x:Key="visibilityConverter" />

        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                         Color="Transparent" />
        <!-- Background of selected item when not focussed -->
        <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}"
                         Color="Transparent" />

        <Style TargetType="{x:Type ListBoxItem}">
            <Style.Triggers>
                <Trigger Property="IsSelected"
                         Value="True">
                    <Setter Property="Foreground"
                            Value="Black" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type TextBlock}"
               x:Key="trimmedText">
            <Setter Property="MaxWidth"
                    Value="300" />
            <Setter Property="TextTrimming"
                    Value="CharacterEllipsis" />
            <Setter Property="TextWrapping"
                    Value="WrapWithOverflow" />
        </Style>

        <Style x:Key="serviceListBox"
               TargetType="{x:Type ListBox}">
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                    Value="Disabled" />
            <Setter Property="VerticalAlignment"
                    Value="Stretch" />
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <UniformGrid MinHeight="400"
                                     UI:PanelLayoutAnimator.IsAnimationEnabled="True"
                                     HorizontalAlignment="Center" />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate DataType="{x:Type Structures:ServiceDefinition}">
            <Border BorderThickness="1"
                    BorderBrush="Transparent"
                    Name="selectedBorder"
                    CornerRadius="6"
                    Padding="5"
                    Margin="5">
                <StackPanel Orientation="Vertical">
                    <Border Name="itemBorder"
                            HorizontalAlignment="Center"
                            BorderBrush="Black"
                            BorderThickness="1"
                            CornerRadius="6"
                            Padding="5"
                            Background="White">
                        <Border.Effect>
                            <DropShadowEffect Color="LightGray"
                                              ShadowDepth="2"
                                              BlurRadius="5" />
                        </Border.Effect>

                        <TextBlock FontSize="16"
                                   Style="{DynamicResource trimmedText}"
                                   HorizontalAlignment="Center"
                                   Text="{Binding ServiceType, Converter={StaticResource typeConverter}}" />
                    </Border>

                    <ItemsControl Visibility="{Binding DataContext.ShowDetails, ElementName=root, Converter={StaticResource visibilityConverter}}"
                                  ItemsSource="{Binding RegisteredTypes}"
                                  HorizontalContentAlignment="Stretch"
                                  HorizontalAlignment="Stretch">

                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel HorizontalAlignment="Center"
                                            Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border    HorizontalAlignment="Center"
                                           BorderBrush="Black"
                                           BorderThickness="1"
                                           CornerRadius="4"
                                           Padding="6"
                                           Margin="6"
                                           Background="White">
                                    <TextBlock FontSize="14"
                                               Style="{DynamicResource trimmedText}"
                                               HorizontalAlignment="Center"
                                               Text="{Binding Converter={StaticResource typeConverter}}" />
                                </Border>

                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                </StackPanel>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}"
                             Value="True">
                    <DataTrigger.Setters>
                        <Setter TargetName="itemBorder"
                                Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect ShadowDepth="5"
                                                  Color="DarkGray"
                                                  BlurRadius="5" />
                            </Setter.Value>
                        </Setter>
                        <Setter TargetName="selectedBorder"
                                Property="BorderBrush"
                                Value="Black" />
                    </DataTrigger.Setters>
                </DataTrigger>
            </DataTemplate.Triggers>

        </DataTemplate>
    </UserControl.Resources>
    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0"
                       FontWeight="Bold"
                       Text="Registered Services:" />
            <TextBlock Margin="20,5,5,5"
                       Grid.Row="1"
                       TextWrapping="Wrap">
            		The Autofac container has the following 
                    <Hyperlink>services<UI:PopupHelp.HelpTip>
                            Services in the Autofac world represent a well-defined contract 
                            that a component provides. The IEnumerable&lt;T&gt; interface 
                            is an example of a Service that the concrete implementation of List&lt;T&gt;
                            provides. A service can be provided by multiple components, vice-versa, 
                            one component can provide multiple services.
                        </UI:PopupHelp.HelpTip>
            		  </Hyperlink>
                     and <Hyperlink>components<UI:PopupHelp.HelpTip>
                    Components are a concrete implementation of a particular service. One component can provide multiple services.
                   </UI:PopupHelp.HelpTip>
                    </Hyperlink> registered.

            </TextBlock>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0"
                       Text="Filter: "
                       Margin="5"
                       VerticalAlignment="Center" />
            <TextBox Grid.Column="1"
                     Margin="5"
                     Text="{Binding FilterText, UpdateSourceTrigger=PropertyChanged}"
                     VerticalAlignment="Center" />
        </Grid>

        <ListBox Grid.Row="2"
                 Name="servicesListBox"
                 ItemsSource="{Binding Services}"
                 IsSynchronizedWithCurrentItem="True"
                 Style="{DynamicResource serviceListBox}">
        </ListBox>

        <Button Grid.Row="3"
                Grid.Column="0"
                Content="Build Service"
                Command="{Binding BuildCommand}"
                Margin="5" />

    </Grid>

</UserControl>